This repository provides step-by-step guides, configuration examples, and best practices for enabling and hardening SSL/TLS on Apache web servers. It’s aimed at improving the security of web applications by ensuring encrypted communication and compliance with modern security standards.

📘 What's Inside:
📄 Apache SSL Configuration (ssl.conf, httpd.conf examples)

🔐 Enabling HTTPS with Let's Encrypt (Certbot automation)

🛡️ SSL Hardening Tips (Disable weak ciphers, protocols like SSLv3, TLSv1.0)

🧪 SSL Testing Tools (SSL Labs, OpenSSL, testssl.sh)

📈 Enforcing HSTS, OCSP Stapling, and Secure Headers

🧰 Scripts for SSL Cert Monitoring and Auto-Renewal

🧾 Compliance Guides (PCI-DSS, NIST, OWASP recommendations)




# Step 1: Generate a Private Key
openssl genpkey -algorithm RSA -out private.key -aes256
# Enter passphrase for private.key:

# Step 2: Create a Certificate Signing Request (CSR)
openssl req -new -key private.key -out request.csr
# You'll be prompted to enter the following information:
# Country Name (2 letter code) [XX]:
# State or Province Name (full name) []:
# Locality Name (eg, city) [Default City]:
# Organization Name (eg, company) [Default Company Ltd]:
# Organizational Unit Name (eg, section) []:
# Common Name (eg, your name or your server's hostname) []:
# Email Address []:

# Step 3: Generate a Self-Signed Certificate
openssl req -x509 -days 365 -key private.key -in request.csr -out certificate.crt

# (Optional) Step 4: Remove the Passphrase from the Private Key
openssl rsa -in private.key -out private.key
# Enter passphrase for private.key:




# Step 1: Install Apache and mod_ssl
sudo apt update
sudo apt install apache2
sudo apt install openssl
sudo a2enmod ssl

# Step 2: Copy the SSL Certificate and Key Files
sudo cp certificate.crt /etc/ssl/certs/
sudo cp private.key /etc/ssl/private/

# Step 3: Edit the SSL Configuration
sudo nano /etc/apache2/sites-available/default-ssl.conf

add these following lines below Document root
>   SSLCertificateFile /etc/ssl/certs/certificate.crt
>   SSLCertificateKeyFile /etc/ssl/private/private.key

# Step 4: Enable the SSL Site Configuration and Reload Apache
sudo a2ensite default-ssl.conf
sudo systemctl reload apache2

# Step 5: Check Apache Configuration
sudo apache2ctl configtest
sudo systemctl restart apache2

# Step 6: Open Ports for SSL (optional)
sudo ufw allow 'Apache Full'
